Return-Path: <linux-input+bounces-2421-lists+linux-input=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-input@lfdr.de
Delivered-To: lists+linux-input@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [139.178.88.99])
	by mail.lfdr.de (Postfix) with ESMTPS id 5DE1287EFA7
	for <lists+linux-input@lfdr.de>; Mon, 18 Mar 2024 19:19:37 +0100 (CET)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id 18AFA282503
	for <lists+linux-input@lfdr.de>; Mon, 18 Mar 2024 18:19:36 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 5897455E63;
	Mon, 18 Mar 2024 18:18:19 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=wanadoo.fr header.i=@wanadoo.fr header.b="GY91ay93"
X-Original-To: linux-input@vger.kernel.org
Received: from smtp.smtpout.orange.fr (smtp-20.smtpout.orange.fr [80.12.242.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id D88DD55E50;
	Mon, 18 Mar 2024 18:18:10 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=80.12.242.20
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1710785899; cv=none; b=l6wqFMlQufiNwwZJ+coSYeS6bwZHC45kSELKZOR/YxkgYHc7EIFUk4FAXtWlfpPz3/tzxbRgoh7HBE5Z1EIeNa5fhQxh0jiMmepMokKSqB6PiDoFqekQ/vU2X348oVGdZYZ4+/P+0rN7LlgHXFFhOb7ZstYQzI7wftS39rzS0N8=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1710785899; c=relaxed/simple;
	bh=vKeJUKB+u37db36gTjNo+UeW5oHXh6y2QnpeIS+yaqw=;
	h=Message-ID:Date:MIME-Version:Subject:To:Cc:References:From:
	 In-Reply-To:Content-Type; b=afgFxqJDoGfTWjj3UdnIS5xBpFnIWehLk/+pBmbB9jneUm2K21E0drMoqir3x6bCkq6qX/DcPhjLxIRFPvSE0WGNvCyb9XowIUey5pbfGbfwGqkmz+ID0XWi4XqKIMcJRtWlh69SVVQ7V2svL84saEUnuoo04JRxYiCa+TVzhgw=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=wanadoo.fr; spf=pass smtp.mailfrom=wanadoo.fr; dkim=pass (2048-bit key) header.d=wanadoo.fr header.i=@wanadoo.fr header.b=GY91ay93; arc=none smtp.client-ip=80.12.242.20
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=wanadoo.fr
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=wanadoo.fr
Received: from [192.168.1.18] ([92.140.202.140])
	by smtp.orange.fr with ESMTPA
	id mHYVrl4elyrKRmHYVrKA63; Mon, 18 Mar 2024 19:18:02 +0100
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=wanadoo.fr;
	s=t20230301; t=1710785882;
	bh=eieEvLVG/XbO56JpsYoKOkYnwQ/98oNJVqRk70FrbqM=;
	h=Message-ID:Date:MIME-Version:Subject:To:From;
	b=GY91ay93GRg5TcFi14M2AefmSt9/lRZ4CpJ4b5Huq1Oa0jMPG6mRikKF/PvPlRbiP
	 ijgQl8qmROifMvJ+QfLRinqcuVlv24CHwYCwLi9HHNu9H7AbCuM/gkqx+c2DYchrSI
	 bFNTxmcH/pyv0TbY0jtw4Y7riAGMCQMOdcRPOVa2yqxM+mOorsLdrBkwCRrDLA8IP8
	 NZ5Wgi7nawF6p2/TiZ7bF+ZfxxKEKKg840kJEnZlBomGXYds3dw78xceyPGmHNIcNT
	 5oCoH7mM1vF4bSwAndR5kTOchgYp48Z937EBHiVoJDoZ6HIoAczOvU4C8DZz3Gd+87
	 vNIPaUlQ9i2Jg==
X-ME-Helo: [192.168.1.18]
X-ME-Auth: Y2hyaXN0b3BoZS5qYWlsbGV0QHdhbmFkb28uZnI=
X-ME-Date: Mon, 18 Mar 2024 19:18:02 +0100
X-ME-IP: 92.140.202.140
Message-ID: <588c9ba0-fcec-4700-a577-b604511f22a1@wanadoo.fr>
Date: Mon, 18 Mar 2024 19:17:48 +0100
Precedence: bulk
X-Mailing-List: linux-input@vger.kernel.org
List-Id: <linux-input.vger.kernel.org>
List-Subscribe: <mailto:linux-input+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-input+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v3 1/4] HID: hid-picolcd*: Convert sprintf/scnprintf to
 sysfs_emit/sysfs_emit_at
To: Li Zhijian <lizhijian@fujitsu.com>, linux-kernel@vger.kernel.org
Cc: =?UTF-8?Q?Bruno_Pr=C3=A9mont?= <bonbons@linux-vserver.org>,
 Jiri Kosina <jikos@kernel.org>,
 Benjamin Tissoires <benjamin.tissoires@redhat.com>,
 linux-input@vger.kernel.org
References: <20240318012819.1405003-1-lizhijian@fujitsu.com>
Content-Language: en-MW
From: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
In-Reply-To: <20240318012819.1405003-1-lizhijian@fujitsu.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit

Le 18/03/2024 à 02:28, Li Zhijian a écrit :
> Per filesystems/sysfs.rst, show() should only use sysfs_emit()
> or sysfs_emit_at() when formatting the value to be returned to user space.
> 
> coccinelle complains that there are still a couple of functions that use
> snprintf(). Convert them to sysfs_emit().
> 
> scnprintf() will be converted as weel if they have.
> 
> Generally, this patch is generated by
> make coccicheck M=<path/to/file> MODE=patch \
> COCCI=scripts/coccinelle/api/device_attr_show.cocci
> 
> No functional change intended
> 
> CC: "Bruno Prémont" <bonbons@linux-vserver.org>
> CC: Jiri Kosina <jikos@kernel.org>
> CC: Benjamin Tissoires <benjamin.tissoires@redhat.com>
> CC: linux-input@vger.kernel.org
> Signed-off-by: Li Zhijian <lizhijian@fujitsu.com>
> ---
> V3:
>     Covert more file(drivers/hid/hid-picolcd_fb.c) as suggested by Bruno
> 
> This is a part of the work "Fix coccicheck device_attr_show warnings"[1]
> Split them per subsystem so that the maintainer can review it easily
> [1] https://lore.kernel.org/lkml/20240116041129.3937800-1-lizhijian@fujitsu.com/
> Signed-off-by: Li Zhijian <lizhijian@fujitsu.com>
> ---
>   drivers/hid/hid-picolcd_core.c | 6 +++---
>   drivers/hid/hid-picolcd_fb.c   | 4 ++--
>   2 files changed, 5 insertions(+), 5 deletions(-)
> 
> diff --git a/drivers/hid/hid-picolcd_core.c b/drivers/hid/hid-picolcd_core.c
> index bbda231a7ce3..fa46fb6eab3f 100644
> --- a/drivers/hid/hid-picolcd_core.c
> +++ b/drivers/hid/hid-picolcd_core.c
> @@ -256,9 +256,9 @@ static ssize_t picolcd_operation_mode_show(struct device *dev,
>   	struct picolcd_data *data = dev_get_drvdata(dev);
>   
>   	if (data->status & PICOLCD_BOOTLOADER)
> -		return snprintf(buf, PAGE_SIZE, "[bootloader] lcd\n");
> +		return sysfs_emit(buf, "[bootloader] lcd\n");
>   	else
> -		return snprintf(buf, PAGE_SIZE, "bootloader [lcd]\n");
> +		return sysfs_emit(buf, "bootloader [lcd]\n");
>   }
>   
>   static ssize_t picolcd_operation_mode_store(struct device *dev,
> @@ -301,7 +301,7 @@ static ssize_t picolcd_operation_mode_delay_show(struct device *dev,
>   {
>   	struct picolcd_data *data = dev_get_drvdata(dev);
>   
> -	return snprintf(buf, PAGE_SIZE, "%hu\n", data->opmode_delay);
> +	return sysfs_emit(buf, "%hu\n", data->opmode_delay);
>   }
>   
>   static ssize_t picolcd_operation_mode_delay_store(struct device *dev,
> diff --git a/drivers/hid/hid-picolcd_fb.c b/drivers/hid/hid-picolcd_fb.c
> index d7dddd99d325..369c78d70e66 100644
> --- a/drivers/hid/hid-picolcd_fb.c
> +++ b/drivers/hid/hid-picolcd_fb.c
> @@ -424,9 +424,9 @@ static ssize_t picolcd_fb_update_rate_show(struct device *dev,

Hi,

just above we have:
	for (i = 1; i <= PICOLCDFB_UPDATE_RATE_LIMIT; i++)

>   		if (ret >= PAGE_SIZE)
>   			break;

and PICOLCDFB_UPDATE_RATE_LIMIT is 10, so it is not possible to have ret 
 >= PAGE_SIZE. Should it happen, sysfs_emit_at() handles it.
So, this test can also be removed, IMHO.

CJ

>   		else if (i == fb_update_rate)
> -			ret += scnprintf(buf+ret, PAGE_SIZE-ret, "[%u] ", i);
> +			ret += sysfs_emit_at(buf, ret, "[%u] ", i);
>   		else
> -			ret += scnprintf(buf+ret, PAGE_SIZE-ret, "%u ", i);
> +			ret += sysfs_emit_at(buf, ret, "%u ", i);
>   	if (ret > 0)
>   		buf[min(ret, (size_t)PAGE_SIZE)-1] = '\n';
>   	return ret;


